name: WebAssembly

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - 'resources/**'
      - '.github/workflows/webassembly.yml'
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-latest
    
    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      PROJECT_BUILD_PATH: ${{ github.event.repository.name }}\build
      PROJECT_RELEASE_PATH: ${{ github.event.repository.name }}_dev_wasm
      
    steps:
    - name: Checkout this repo
      uses: actions/checkout@master
      with:
        path: ${{ env.PROJECT_NAME }}
  
    - name: Setup emsdk
      uses: mymindstorm/setup-emsdk@v11
      with:
        version: 3.1.2
        actions-cache-folder: 'emsdk-cache'
    
    - name: Setup Environment
      run: | 
        mkdir ${{ env.PROJECT_RELEASE_PATH }}
        mkdir ${{ env.PROJECT_BUILD_PATH }}
        dir
   
    - name: Build Project
      run: |
        cd ${{ env.PROJECT_BUILD_PATH }}
        emcmake cmake .. -DPLATFORM=Web -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXE_LINKER_FLAGS="-s USE_GLFW=3" -DCMAKE_EXECUTABLE_SUFFIX=".html"
        emmake make
  
    - name: Generate Artifacts
      run: |
        ls ${{ env.PROJECT_BUILD_PATH }}
        copy /Y ${{ env.PROJECT_BUILD_PATH }}\${{ env.PROJECT_NAME }}.data ${{ env.PROJECT_RELEASE_PATH }}\${{ env.PROJECT_NAME }}.data
        copy /Y ${{ env.PROJECT_BUILD_PATH }}\${{ env.PROJECT_NAME }}.wasm ${{ env.PROJECT_RELEASE_PATH }}\${{ env.PROJECT_NAME }}.wasm
        copy /Y ${{ env.PROJECT_BUILD_PATH }}\${{ env.PROJECT_NAME }}.js ${{ env.PROJECT_RELEASE_PATH }}\${{ env.PROJECT_NAME }}.js
        copy /Y ${{ env.PROJECT_BUILD_PATH }}\${{ env.PROJECT_NAME }}.html ${{ env.PROJECT_RELEASE_PATH }}\index.html
      shell: cmd

    - name: Upload Artifacts to Githug Pages
      uses: actions/upload-artifact@v3
      with:
        name: github-pages
        path: ${{ env.PROJECT_RELEASE_PATH }}
        
    - name: Deploy to githug pages
      if: ${{ github.ref_name == 'main' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ env.PROJECT_RELEASE_PATH }}
      
