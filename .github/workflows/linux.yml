name: Linux

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - 'resources/**'
      - '.github/workflows/linux.yml'
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      PROJECT_BUILD_PATH: ${{ github.event.repository.name }}/build
      PROJECT_RELEASE_PATH: ${{ github.event.repository.name }}_dev_linux_x64
    
    steps:
    - name: Checkout this repo
      uses: actions/checkout@master
      with:
        path: ${{ env.PROJECT_NAME }}
    
    - name: Setup Environment
      run: | 
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev cmake
        mkdir ${{ env.PROJECT_RELEASE_PATH }}
        mkdir ${{ env.PROJECT_BUILD_PATH }}
        ls
      shell: bash

    - name: Build Product
      run: |
        cd ${{ env.PROJECT_BUILD_PATH }}
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build .
        cd ..

    - name: Generate Artifacts
      run: |
        ls ${{ env.PROJECT_BUILD_PATH }}
        cp ${{ env.PROJECT_BUILD_PATH }}/${{ env.PROJECT_NAME }} ${{ env.PROJECT_RELEASE_PATH }}
        cp ${{ env.PROJECT_NAME }}/README.md ${{ env.PROJECT_RELEASE_PATH }}
        cp ${{ env.PROJECT_NAME }}/LICENSE ${{ env.PROJECT_RELEASE_PATH }}
        ls ${{ env.PROJECT_RELEASE_PATH }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PROJECT_RELEASE_PATH }}
        path: ./${{ env.PROJECT_RELEASE_PATH }}